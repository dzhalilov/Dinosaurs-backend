version: '3.9'

services:
  app:
    image: 'dinosaurs-app:latest'
    build:
      context: .
    container_name: dinos_container
    depends_on:
      - postgres
    ports:
      - "10050:10050"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/dinodb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_PROFILES_ACTIVE=emailDisable

  postgres:
    image: 'postgres:14.5-alpine'
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=dinodb
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  grafana:
    build: './scripts/config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./scripts/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./scripts/prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
networks:
  monitoring: