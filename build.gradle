plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
}

group = 'com.rmr.dinosaurs'
version = 'SNAPSHOT-1.0'

sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	enabled = false
}

ext {
	set('testcontainersVersion', "1.17.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.3'
	implementation "org.springdoc:springdoc-openapi-ui:1.6.11"
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	showViolations = true
	toolVersion '10.3.4'
	maxWarnings = 0
	maxErrors = 0
	configFile file("config/checkstyle/google_checks.xml")
}

jacoco {
	toolVersion = '0.8.8'
}

jacocoTestReport {
	group = 'Reporting'
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

springBoot {
	buildInfo()
}
